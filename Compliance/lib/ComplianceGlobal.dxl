/*************************************************************************************** 
// Author Sepideh Ghanavati, April-May 2007
// - Based on initial version by Bo Jiang, Gunter Mussbacher
// - general assumptions
//	- UCM modules have been generated by URNImport
//	- the UCM folder has been created by URNImport
//	- the UCM folder contains only UCM modules
//	- no one alters the UCM modules except for adding links from UCM modules to 
//	  other modules or from other modules to UCM modules. these links are not to 
//	  be saved in the UCM link modules but have to be saved in different link modules.
//	- objects in the UCM modules are identified by their ID attribute
//	- the user has write access to the UCM folder and modules
//	- user has read access to the external module and write access to the external link module
//	- external modules have a fixed name (see constants) and reside in a fixed folder
//	  (the parent folder of the UCM folder)
//	- an object in the external link module must have an attribute (see constants) which indicates whether 
//	  the link was generated or created manually (if such an attribute does not exist, auto-completion of 
//	  links will stop), by default the attribute indicates that the link was created manually
//	  the attribute must not inherit value, affect the change bar, affect change dates, or generate history
// - assumptions for import of UCM file
//	- the dxl file generated by UCMNav is well-formed
//	  (in particular, all the IDs and IDRefs are correct and the order of commands is correct)
//	- links from an object in a UCM module to other modules will optionally be deleted
//	  by subsequent UCM imports if the object in the UCM module needs to be deleted.
//	  the object in the UCM module will also be deleted optionally
//	- links to an object in a UCM module from other modules will not be deleted
//	  by subsequent UCM imports even if the object in the UCM module needs to be deleted.
//	  in this case, the object in the UCM module will also not be deleted
//	- the import currently only sets up links to the external module above the UCM modules
// - assumptions for auto-completion of external links
//	- the external link module links UCM modules only to the external module and no other module per link direction
//	- since deleted objects have all their internal links removed, the auto-completion of links
//	  will not generate more links for such objects because they cannot be found in the link modules
// - assumptions for change report
//	- none
*/

// global constants 
const string projectFolderName = "/Compliance/"
const string orgFolderName = "Organization/"
const string legFolderName = "Legislation/"

// global constants
const string fileNameLegSources = "Sources"
const string fileNameLegDef = "Legislation-Definition"
const string fileNameLegClause = "Legislation-Clause"
const string fileNameLegActors = "Actors"
const string fileNameLegIntentionalElements = "Intentional Elements"

const string fileNameOrgIntentionalElements = "Intentional Elements"
const string fileNameOrgActors = "Actors"
const string fileNameOrgComponents = "Components"
const string fileNameOrgResponsibilities = "Responsibilities"
const string fileNameOrgComplies = "Complies"
const string fileNameOrgResps = "resps"
const string fileNameOrgTraces = "Traces"
const string fileNameOrgUrnLinks = "Urn Links"

// all UCM-URN formal modules
Module orgActorModule
Module orgIntentionalElementModule
Module orgComponentModule
Module orgResponsibilityModule

// all UCM link modules
Module orgTracesLinkModule
Module orgRespLinkModule
Module orgCompliesLinkModule
Module orgRespsLinkModule
Module orgUrnLinksModule

// all external modules
Module legDefModule
Module legClauseModule
Module legIntetionalElementModule
Module legActorsModule

Module legSourcesLinkModule
